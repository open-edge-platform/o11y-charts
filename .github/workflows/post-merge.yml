# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Post-Merge CI Pipeline

on:
  push:
    branches:
      - main
      - release-*
  workflow_dispatch:

permissions: {}

jobs:
  pre-checks:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      all_changed_projects: ${{ steps.merge-changed-projects.outputs.all_changed_projects }}
    steps:
      - name: "Check out repository code"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: "Git safe directory"
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: "Discover Changed Subfolders Inside 'apps'"
        id: discover-changes-apps
        uses: open-edge-platform/orch-ci/discover-changed-subfolders@76700c2fb6d547733b9218d9638dca43f5296399 # 0.1.52
        with:
          project_folder: "./apps"

      - name: "Discover Changed Subfolders Inside 'charts'"
        id: discover-changes-charts
        uses: open-edge-platform/orch-ci/discover-changed-subfolders@76700c2fb6d547733b9218d9638dca43f5296399 # 0.1.52
        with:
          project_folder: "./charts"
          
      - name: "Merge Changed Subfolders"
        id: merge-changed-projects
        env:
          APPS_CHANGED_PROJECTS: ${{ steps.discover-changes-apps.outputs.changed_projects }}
          CHARTS_CHANGED_PROJECTS: ${{ steps.discover-changes-charts.outputs.changed_projects }}
        run: |
          # TODO: Is there a better way to merge the two arrays in GHA?
          echo "Changed Projects in apps: $APPS_CHANGED_PROJECTS"
          echo "Changed Projects in charts: $CHARTS_CHANGED_PROJECTS"

          # Merge the two arrays (add 'apps/' and 'charts/') and remove empty strings (if any)
          all_changed_projects=$(jq -c -n --argjson a "$APPS_CHANGED_PROJECTS" --argjson b "$CHARTS_CHANGED_PROJECTS" '
            ($a | map(select(. != "") | "apps/" + .)) +
            ($b | map(select(. != "") | "charts/" + .))
          ')
          echo "all_changed_projects=$all_changed_projects" >> $GITHUB_OUTPUT
          echo "All Changed Projects: $all_changed_projects"
  post-merge:
    permissions:
      # it combines `read-all` with `contents: write` and `security-events: write` - all of them needed by `post-merge.yml` workflow
      contents: write
      actions: read
      attestations: read
      checks: read
      deployments: read
      id-token: write
      issues: read
      models: read
      discussions: read
      packages: read
      pages: read
      pull-requests: read
      repository-projects: read
      security-events: write
      statuses: read
    needs: pre-checks
    # Only run the pipeline if there are changes in the projects (matrix -> project_folder will fail with empty array)
    if: ${{ needs.pre-checks.outputs.all_changed_projects != '' && toJson(fromJson(needs.pre-checks.outputs.all_changed_projects)) != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        project_folder: ${{ fromJson(needs.pre-checks.outputs.all_changed_projects) }}
    uses: open-edge-platform/orch-ci/.github/workflows/post-merge.yml@76700c2fb6d547733b9218d9638dca43f5296399  # 0.1.52
    with:
      project_folder: ${{ matrix.project_folder }}
      prefix_tag_separator: "-"
      run_version_check: true
      run_version_tag: true
      bootstrap_tools: "go,gotools,nodejs,python,golangci-lint2,helm,shellcheck,hadolint,yq,jq,protolint"
      run_dep_version_check: false
      cache_go: true
      run_build: true
      # run_lint and run_test - to have full, reusable cache for all PRs
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache
      run_lint: true
      run_test: true
      remove_cache_go: true
      run_docker_build: true
      run_docker_push: true
      run_helm_build: true
      run_helm_push: true
      run_version_dev: false
    secrets:
      SYS_ORCH_GITHUB: ${{ secrets.SYS_ORCH_GITHUB }}
      COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
      NO_AUTH_ECR_PUSH_USERNAME: ${{ secrets.NO_AUTH_ECR_PUSH_USERNAME }}
      NO_AUTH_ECR_PUSH_PASSWD: ${{ secrets.NO_AUTH_ECR_PUSH_PASSWD }}
      MSTEAMS_WEBHOOK: ${{ secrets.TEAMS_WEBHOOK }}
